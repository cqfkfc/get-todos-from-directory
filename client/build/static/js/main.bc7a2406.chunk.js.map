{"version":3,"sources":["components/TodoResults.js","components/SearchTodoFromFolder.js","utils/Data.js","App.js","reportWebVitals.js","index.js"],"names":["TodoResults","props","List","files","map","file","ListItem","ListItemIcon","Folder","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","SearchTodoFromFolder","useState","filteredFiles","setFilteredFiles","useDropzone","maxFiles","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useEffect","Promise","resolve","length","data","formData","FormData","i","append","name","fetch","method","body","then","res","json","style","useMemo","Grid","container","item","xs","webkitdirectory","App","className","Card","variant","CardHeader","title","Typography","CardContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAoBeA,MAhBf,SAAqBC,GACnB,OACI,qBAAK,cAAY,UAAjB,SACE,cAACC,EAAA,EAAD,UAAOD,EAAME,MAAMC,KAAI,SAAAC,GAAI,OAC/B,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEDH,IAJYA,WCFbI,EAAY,CAChBC,KAAM,EACNC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAAS,OACTC,YAAa,EACbC,aAAc,EACdC,YAAa,UACbC,YAAa,SACbC,gBAAiB,UACjBC,MAAO,UACPC,QAAS,OACTC,WAAY,2BAGRC,EAAc,CAClBN,YAAa,WAGTO,EAAc,CAClBP,YAAa,WAGTQ,EAAc,CAClBR,YAAa,WAkDAS,MA7Cf,WACE,MAA2CC,mBAAS,IAApD,mBAAQC,EAAR,KAAuBC,EAAvB,KACA,EAOIC,YAAY,CAACC,SAAU,MANzBC,EADF,EACEA,cACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,cACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,aAGFC,qBAAU,WC/CL,IAAmBnC,KDgDZ6B,EC/CL,IAAIO,SAAQ,SAAAC,GACI,IAAjBrC,EAAMsC,QACRD,EAAQ,CAACE,KAAM,KAEf,IAAMC,EAAW,IAAIC,SACrB,IAAK,IAAMC,KAAK1C,EAAO,CACrB,IAAME,EAAOF,EAAM0C,GACnBF,EAASG,OAAOzC,EAAK0C,KAAM1C,GAE7B2C,MAAM,oBAAqB,CACzBC,OAAQ,OACRC,KAAMP,IAENQ,MAAK,SAAAC,GAAG,OAAEZ,EAAQY,EAAIC,eDkCDF,MAAK,SAAAT,GAAI,OAAEb,EAAiBa,EAAKA,WAC1D,CAACV,IAEH,IAAMsB,EAAQC,mBAAQ,8BAAC,uCAClB9C,GACC0B,EAAeZ,EAAc,IAC7Ba,EAAeZ,EAAc,IAC7Ba,EAAeZ,EAAc,MAC/B,CACFU,EACAC,EACAC,IAGF,OACE,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACA,gDAAS1B,EAAa,CAACqB,WAAvB,cAEE,mCACA,cAAY,gBACZM,gBAAgB,IACZ1B,MAEJ,oGAIF,cAAC,EAAD,CAAa/B,MAAOyB,Q,gCEjDXiC,MAvBf,WACE,OAEE,aADA,CACA,OAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAGE,eAACC,EAAA,EAAD,CAAMC,QAAQ,WAAd,UACE,cAACC,EAAA,EAAD,CACAC,MAAO,cAACC,EAAA,EAAD,CAAYH,QAAQ,KAApB,wBAEP,cAACI,EAAA,EAAD,UACA,cAAC,EAAD,cCJKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc7a2406.chunk.js","sourcesContent":["import { List, ListItem, ListItemIcon } from \"@material-ui/core\";\nimport { Folder } from '@material-ui/icons'\n\n// TODO: change the function name\nfunction TodoResults(props) {\n  return (\n      <div data-testid=\"results\">\n        <List>{props.files.map(file => (\n    <ListItem key={file}>\n      <ListItemIcon>\n        <Folder/>\n      </ListItemIcon>\n      {file} \n    </ListItem>\n  ))}</List>\n     \n      </div>\n    );\n}\n\nexport default TodoResults;\n","import { Grid } from \"@material-ui/core\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { fetchData } from '../utils/Data';\nimport TodoResults from \"./TodoResults\";\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n}; \n\n\n// TODO: change the function name\nfunction SearchTodoFromFolder() {\n  const [ filteredFiles, setFilteredFiles] = useState([])\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({maxFiles: 1000});\n\n  useEffect(()=>{\n    fetchData(acceptedFiles).then(data=>setFilteredFiles(data.data));\n  },[acceptedFiles])\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n      <div {...getRootProps({style})}>\n        \n        <input \n        data-testid=\"upload-folder\"\n        webkitdirectory=\"\" // this attribute enables upload of directory instead of file\n        {...getInputProps()} \n        />\n        <p>Drag and drop your folder here to find files containing TODOs</p>\n      </div>\n\n      </Grid>\n      <TodoResults files={filteredFiles} />\n    </Grid>\n    );\n}\n\nexport default SearchTodoFromFolder;\n","export function fetchData(files) {\r\n  return new Promise(resolve=>{\r\n    if (files.length === 0) {\r\n      resolve({data: []})\r\n    }\r\n      const formData = new FormData()\r\n      for (const i in files) {\r\n        const file = files[i]\r\n        formData.append(file.name, file)\r\n      }\r\n      fetch('/api/upload/files', {\r\n        method: 'POST',\r\n        body: formData\r\n      }\r\n      ).then(res=>resolve(res.json()))\r\n  })\r\n}","import './App.css';\nimport SearchTodoFromFolder from './components/SearchTodoFromFolder';\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n    // TODO: remove app classname\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* TODO: beautify this page */}\n\n        <Card variant=\"outlined\">\n          <CardHeader \n          title={<Typography variant=\"h2\">Welcome!</Typography>}\n          />\n          <CardContent>\n          <SearchTodoFromFolder />\n\n          </CardContent>\n        </Card>\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}